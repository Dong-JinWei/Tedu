{"remainingRequest":"/Users/dowei/Project/Tedu/job/jobPage/IofTV-Screen/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!/Users/dowei/Project/Tedu/job/jobPage/IofTV-Screen/src/views/indexs/center-map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dowei/Project/Tedu/job/jobPage/IofTV-Screen/src/views/indexs/center-map.vue","mtime":1662716419876},{"path":"/Users/dowei/Project/Tedu/job/jobPage/IofTV-Screen/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dowei/Project/Tedu/job/jobPage/IofTV-Screen/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeHpxQ29kZSBmcm9tICcuLi8uLi91dGlscy9tYXAveHpxQ29kZScNCmltcG9ydCB7DQogIGN1cnJlbnRHRVQNCn0gZnJvbSAnYXBpL21vZHVsZXMnDQoNCmltcG9ydCB7DQogIEdFVE5PQkFTRQ0KfSBmcm9tICdhcGknDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEgKCkgew0KICAgIHJldHVybiB7DQogICAgICBtYXB0aXRsZTogJ+WwseS4muWOu+WQkeWIhuW4g+WbvicsDQogICAgICBvcHRpb25zOiB7fSwNCiAgICAgIGNvZGU6ICdjaGluYScsDQogICAgICB1c2VyQ29kZTogLTEsIC8vIC0xIOS7o+ihqOS4reWbvSDnlKjmiLfmnYPpmZDnmoTooYzmlL/ljLpjb2RlDQogICAgICBlY2hhcnRCaW5kQ2xpY2s6IGZhbHNlLA0KICAgICAgZGF0YUxpc3Q6IFtdDQogICAgfQ0KICB9LA0KICBjcmVhdGVkICgpIHt9LA0KDQogIG1vdW50ZWQgKCkgew0KICAgIC8vIGNvbnNvbGUubG9nKHh6cUNvZGUpOw0KICAgIHRoaXMuZ2V0RGF0YSgpDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBnZXREYXRhIChjb2RlKSB7DQogICAgICBjdXJyZW50R0VUKCdiaWc4Jywgew0KICAgICAgICByZWdpb25Db2RlOiBjb2RlDQogICAgICB9KS50aGVuKHJlcyA9PiB7DQogICAgICAgIGlmIChyZXMuc3VjY2Vzcykgew0KICAgICAgICAgIGlmICghY29kZSkgew0KICAgICAgICAgICAgdGhpcy51c2VyQ29kZSA9IHJlcy5kYXRhLnJlZ2lvbkNvZGUNCiAgICAgICAgICB9DQogICAgICAgICAgdGhpcy4kaHR0cC5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3QvYmlnRGF0YS9jaXR5T3JkZXInKS50aGVuKHJlc3BvbnNlID0+IHsNCiAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmNvZGUgPT09IDIwMCkgew0KICAgICAgICAgICAgICB0aGlzLmRhdGFMaXN0ID0gcmVzcG9uc2UuZGF0YS5kYXRhDQogICAgICAgICAgICAgIGZvciAobGV0IGRhdGEgb2YgdGhpcy5kYXRhTGlzdCkgew0KICAgICAgICAgICAgICAgIGlmIChkYXRhLm5hbWUgPT09ICfmlrDnloYnKSB7DQogICAgICAgICAgICAgICAgICBkYXRhLm5hbWUgPSAn5paw55aG57u05ZC+5bCU5peP6Ieq5rK75Yy6Jw0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YS5uYW1lID09PSAn5bm/6KW/Jykgew0KICAgICAgICAgICAgICAgICAgZGF0YS5uYW1lID0gJ+W5v+ilv+WjruaXj+iHquayu+WMuicNCiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEubmFtZSA9PT0gJ+WGheiSmeWPpCcpIHsNCiAgICAgICAgICAgICAgICAgIGRhdGEubmFtZSA9ICflhoXokpnlj6Toh6rmsrvljLonDQogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkYXRhLm5hbWUgPT09ICflub/opb8nKSB7DQogICAgICAgICAgICAgICAgICBkYXRhLm5hbWUgPSAn5bm/6KW/5aOu5peP6Ieq5rK75Yy6Jw0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YS5uYW1lID09PSAn6KW/6JePJykgewogICAgICAgICAgICAgICAgICBkYXRhLm5hbWUgPSAn6KW/6JeP6Ieq5rK75Yy6JwogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkYXRhLm5hbWUgPT09ICfph43luoYnKSB7CiAgICAgICAgICAgICAgICAgIGRhdGEubmFtZSA9ICfph43luobluIInCiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEubmFtZSA9PT0gJ+WugeWkjycpIHsKICAgICAgICAgICAgICAgICAgZGF0YS5uYW1lID0gJ+WugeWkj+WbnuaXj+iHquayu+WMuicKICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICBkYXRhLm5hbWUgKz0gJ+ecgScNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgdGhpcy5nZXRHZW9qc29uKHJlcy5kYXRhLnJlZ2lvbkNvZGUsIHRoaXMuZGF0YUxpc3QpDQogICAgICAgICAgICB9DQogICAgICAgICAgfSkNCiAgICAgICAgICAvLyB0aGlzLmdldEdlb2pzb24ocmVzLmRhdGEucmVnaW9uQ29kZSwgcmVzLmRhdGEuZGF0YUxpc3QpDQoNCiAgICAgICAgICAvLyB0aGlzLm1hcGNsaWNrKCkNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0aGlzLiRNZXNzYWdlLndhcm5pbmcocmVzLm1zZykNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9LA0KICAgIGdldEdlb2pzb24gKG5hbWUsIG15ZGF0YSkgew0KICAgICAgaWYgKG5hbWUgPT09IC0xKSB7DQogICAgICAgIG5hbWUgPSAnY2hpbmEnDQogICAgICB9DQogICAgICB0aGlzLmNvZGUgPSBuYW1lDQogICAgICBHRVROT0JBU0UoJy4vbWFwLWdlb2pzb24vJyArIG5hbWUgKyAnLmpzb24nKS50aGVuKChyZXMpID0+IHsNCiAgICAgICAgLy8gY29uc29sZS5sb2coJ+WcsOWbvuihjOaUv+WMuuWIkicsIG5hbWUsIHJlcyk7DQogICAgICAgIGxldCBjaXR5Q2VudGVyID0ge30NCiAgICAgICAgbGV0IGFyciA9IHJlcy5mZWF0dXJlcw0KICAgICAgICBhcnIubWFwKChpdGVtKSA9PiB7DQogICAgICAgICAgY2l0eUNlbnRlcltpdGVtLnByb3BlcnRpZXMubmFtZV0gPQ0KICAgICAgICAgICAgICBpdGVtLnByb3BlcnRpZXMuY2VudHJvaWQgfHwgaXRlbS5wcm9wZXJ0aWVzLmNlbnRlcg0KICAgICAgICB9KQ0KICAgICAgICBsZXQgbmV3RGF0YSA9IFtdDQogICAgICAgIC8vIGNvbnNvbGUubG9nKCfkuK3lv4PngrknLGNpdHlDZW50ZXIpOw0KICAgICAgICBteWRhdGEubWFwKChpdGVtKSA9PiB7DQogICAgICAgICAgaWYgKGNpdHlDZW50ZXJbaXRlbS5uYW1lXSkgew0KICAgICAgICAgICAgbGV0IGNvbG9yID0gdGhpcy5nZXRDb2xvcihpdGVtLnZhbHVlKQ0KICAgICAgICAgICAgbmV3RGF0YS5wdXNoKHsNCiAgICAgICAgICAgICAgbmFtZTogaXRlbS5uYW1lLA0KICAgICAgICAgICAgICB2YWx1ZTogY2l0eUNlbnRlcltpdGVtLm5hbWVdLmNvbmNhdChpdGVtLnZhbHVlKQ0KICAgICAgICAgICAgICAvLyBpdGVtU3R5bGU6IHsNCiAgICAgICAgICAgICAgLy8gICBjb2xvcjogY29sb3IsDQogICAgICAgICAgICAgIC8vICAgYm9yZGVyQ29sb3I6IGNvbG9yLA0KICAgICAgICAgICAgICAvLyAgIC8vIGJvcmRlcldpZHRoOiA0LA0KICAgICAgICAgICAgICAvLyB9LA0KICAgICAgICAgICAgfSkNCiAgICAgICAgICB9DQogICAgICAgIH0pDQogICAgICAgIGxldCBtYXBqc29uID0gZWNoYXJ0cy5nZXRNYXAobmFtZSkNCiAgICAgICAgaWYgKCFtYXBqc29uKSB7DQogICAgICAgICAgZWNoYXJ0cy5yZWdpc3Rlck1hcChuYW1lLCByZXMpDQogICAgICAgIH0NCiAgICAgICAgdGhpcy5pbml0KG5hbWUsIG15ZGF0YSwgbmV3RGF0YSkNCiAgICAgIH0pDQogICAgfSwNCiAgICBnZXRDb2xvciAobnVtKSB7DQogICAgICBpZiAobnVtID4gMCAmJiBudW0gPCA1KSB7DQogICAgICAgIHJldHVybiAnIzAzNWNmNScNCiAgICAgIH0gZWxzZSBpZiAobnVtID4gNSAmJiBudW0gPCAxMCkgew0KICAgICAgICByZXR1cm4gJyMzMzc1ZTQnDQogICAgICB9IGVsc2UgaWYgKG51bSA+IDEwICYmIG51bSA8IDE1KSB7DQogICAgICAgIHJldHVybiAnIzY3OTdlZicNCiAgICAgIH0gZWxzZSBpZiAobnVtID4gMTUgJiYgbnVtIDwgMjApIHsNCiAgICAgICAgcmV0dXJuICcjOTZiNWVmJw0KICAgICAgfSBlbHNlIGlmIChudW0gPiAyMCAmJiBudW0gPCAyNSkgew0KICAgICAgICByZXR1cm4gJyNiYWNhZTgnDQogICAgICB9IGVsc2UgaWYgKG51bSA+IDI1KSB7DQogICAgICAgIHJldHVybiAnIzNGRjRGRicNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiAnJw0KICAgICAgfQ0KICAgIH0sDQogICAgaW5pdCAobmFtZSwgZGF0YSwgZGF0YTIpIHsNCiAgICAgIGxldCB0b3AgPSA0NQ0KICAgICAgbGV0IHpvb20gPSAxLjA1DQogICAgICBpZiAobmFtZSA9PT0gJ2NoaW5hJykgew0KICAgICAgICB0b3AgPSAxNDANCiAgICAgICAgem9vbSA9IDEuNDINCiAgICAgIH0NCg0KICAgICAgbGV0IG9wdGlvbiA9IHsNCiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLDAsMCwwKScsDQogICAgICAgIHRvb2x0aXA6IHsNCiAgICAgICAgICBzaG93OiBmYWxzZQ0KICAgICAgICB9LA0KICAgICAgICBsZWdlbmQ6IHsNCiAgICAgICAgICBzaG93OiBmYWxzZQ0KICAgICAgICB9LA0KICAgICAgICB2aXN1YWxNYXA6IHsNCiAgICAgICAgICBsZWZ0OiAyMCwNCiAgICAgICAgICBib3R0b206IDIwLA0KICAgICAgICAgIHBpZWNlczogW3sNCiAgICAgICAgICAgIGd0ZTogMjUsDQogICAgICAgICAgICBsYWJlbDogJzI15Liq5Lul5LiKJw0KICAgICAgICAgIH0sIC8vIOS4jeaMh+WumiBtYXjvvIzooajnpLogbWF4IOS4uuaXoOmZkOWkp++8iEluZmluaXR577yJ44CCDQogICAgICAgICAgew0KICAgICAgICAgICAgZ3RlOiAyMCwNCiAgICAgICAgICAgIGx0ZTogMjUsDQogICAgICAgICAgICBsYWJlbDogJzIwLTI15LiqJw0KICAgICAgICAgIH0sDQogICAgICAgICAgew0KICAgICAgICAgICAgZ3RlOiAxNSwNCiAgICAgICAgICAgIGx0ZTogMjAsDQogICAgICAgICAgICBsYWJlbDogJzE1LTIw5LiqJw0KICAgICAgICAgIH0sDQogICAgICAgICAgew0KICAgICAgICAgICAgZ3RlOiAxMCwNCiAgICAgICAgICAgIGx0ZTogMTUsDQogICAgICAgICAgICBsYWJlbDogJzEwLTE15LiqJw0KICAgICAgICAgIH0sDQogICAgICAgICAgew0KICAgICAgICAgICAgZ3RlOiA1LA0KICAgICAgICAgICAgbHRlOiAxMCwNCiAgICAgICAgICAgIGxhYmVsOiAnNS0xMOS4qicNCiAgICAgICAgICB9LA0KICAgICAgICAgIHsNCiAgICAgICAgICAgIGx0ZTogNSwNCiAgICAgICAgICAgIGxhYmVsOiAnMS015LiqJw0KICAgICAgICAgIH0gLy8g5LiN5oyH5a6aIG1pbu+8jOihqOekuiBtaW4g5Li65peg6ZmQ5aSn77yILUluZmluaXR577yJ44CCDQogICAgICAgICAgXSwNCiAgICAgICAgICBpblJhbmdlOiB7DQogICAgICAgICAgICAvLyDmuJDlj5jpopzoibLvvIzku47lsI/liLDlpKcNCiAgICAgICAgICAgIGNvbG9yOiBbDQogICAgICAgICAgICAgICcjYzNkN2RmJywNCiAgICAgICAgICAgICAgJyM1Y2IzY2MnLA0KICAgICAgICAgICAgICAnIzhhYmNkMScsDQogICAgICAgICAgICAgICcjNjZhOWM5JywNCiAgICAgICAgICAgICAgJyMyZjkwYjknLA0KICAgICAgICAgICAgICAnIzE3ODFiNScNCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9LA0KICAgICAgICAgIHRleHRTdHlsZTogew0KICAgICAgICAgICAgY29sb3I6ICcjZmZmJw0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgZ2VvOiB7DQogICAgICAgICAgbWFwOiBuYW1lLA0KICAgICAgICAgIHJvYW06IGZhbHNlLA0KICAgICAgICAgIHNlbGVjdGVkTW9kZTogZmFsc2UsIC8vIOaYr+WQpuWFgeiuuOmAieS4reWkmuS4quWMuuWfnw0KICAgICAgICAgIHpvb206IHpvb20sDQogICAgICAgICAgdG9wOiB0b3AsDQogICAgICAgICAgYXNwZWN0U2NhbGU6IDAuNzgsDQogICAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgICAgc2hvdzogZmFsc2UNCiAgICAgICAgICB9LA0KICAgICAgICAgIGxhYmVsOiB7DQogICAgICAgICAgICBzaG93OiBmYWxzZQ0KICAgICAgICAgIH0sIC8vIOWcsOWbvuS4reaWh+Wtl+WGheWuueWPiuagt+W8j+aOp+WItg0KICAgICAgICAgIGl0ZW1TdHlsZTogew0KICAgICAgICAgICAgYXJlYUNvbG9yOiAncmdiYSgwLDAsMCwwKScsDQogICAgICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMCwwLDAsMCknDQogICAgICAgICAgfSwNCiAgICAgICAgICBlbXBoYXNpczogew0KICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUNCiAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIHNlcmllczogW3sNCiAgICAgICAgICBuYW1lOiAnTUFQJywNCiAgICAgICAgICB0eXBlOiAnbWFwJywNCiAgICAgICAgICBtYXBUeXBlOiBuYW1lLA0KICAgICAgICAgIGFzcGVjdFNjYWxlOiAwLjc4LA0KICAgICAgICAgIGRhdGE6IGRhdGEsDQogICAgICAgICAgLy8gZGF0YTogWzEsMTAwXSwNCg0KICAgICAgICAgIHNlbGVjdGVkTW9kZTogZmFsc2UsIC8vIOaYr+WQpuWFgeiuuOmAieS4reWkmuS4quWMuuWfnw0KICAgICAgICAgIHpvb206IHpvb20sDQogICAgICAgICAgZ2VvSW5kZXg6IDEsDQogICAgICAgICAgdG9wOiB0b3AsDQogICAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgICAgc2hvdzogdHJ1ZSwNCiAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gKHBhcmFtcykgew0KICAgICAgICAgICAgICBpZiAocGFyYW1zLmRhdGEpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gcGFyYW1zLm5hbWUgKyAn77yaJyArIHBhcmFtcy5kYXRhWyd2YWx1ZSddDQogICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHBhcmFtcy5uYW1lDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDAsMCwwLC42KScsDQogICAgICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMTQ3LCAyMzUsIDI0OCwgLjgpJywNCiAgICAgICAgICAgIHRleHRTdHlsZTogew0KICAgICAgICAgICAgICBjb2xvcjogJyNGRkYnDQogICAgICAgICAgICB9DQogICAgICAgICAgfSwNCiAgICAgICAgICBsYWJlbDogew0KICAgICAgICAgICAgc2hvdzogZmFsc2UsDQogICAgICAgICAgICBjb2xvcjogJyMwMDAnLA0KICAgICAgICAgICAgLy8gcG9zaXRpb246IFstMTAsIDBdLA0KICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiAodmFsKSB7DQogICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHZhbCkNCiAgICAgICAgICAgICAgaWYgKHZhbC5kYXRhICE9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdmFsLm5hbWUuc2xpY2UoMCwgMikNCiAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gJycNCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHJpY2g6IHt9LA0KICAgICAgICAgICAgZW1waGFzaXM6IHsNCiAgICAgICAgICAgICAgc2hvdzogZmFsc2UNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIGl0ZW1TdHlsZTogew0KICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDE0NywgMjM1LCAyNDgsIC44KScsDQogICAgICAgICAgICBib3JkZXJXaWR0aDogMSwNCiAgICAgICAgICAgIGFyZWFDb2xvcjogew0KICAgICAgICAgICAgICB0eXBlOiAncmFkaWFsJywNCiAgICAgICAgICAgICAgeDogMC41LA0KICAgICAgICAgICAgICB5OiAwLjUsDQogICAgICAgICAgICAgIHI6IDAuOCwNCiAgICAgICAgICAgICAgY29sb3JTdG9wczogW3sNCiAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsDQogICAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDE0NywgMjM1LCAyNDgsIDApJyAvLyAwJSDlpITnmoTpopzoibINCiAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIG9mZnNldDogMSwNCiAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMTQ3LCAyMzUsIDI0OCwgLjIpJyAvLyAxMDAlIOWkhOeahOminOiJsg0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgIF0sDQogICAgICAgICAgICAgIGdsb2JhbENvb3JkOiBmYWxzZSAvLyDnvLrkuLogZmFsc2UNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBzaGFkb3dDb2xvcjogJ3JnYmEoMTI4LCAyMTcsIDI0OCwgLjMpJywNCiAgICAgICAgICAgIHNoYWRvd09mZnNldFg6IC0yLA0KICAgICAgICAgICAgc2hhZG93T2Zmc2V0WTogMiwNCiAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwLA0KICAgICAgICAgICAgZW1waGFzaXM6IHsNCiAgICAgICAgICAgICAgYXJlYUNvbG9yOiAnIzM4OUJCNycsDQogICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAxDQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAgZGF0YTogZGF0YTIsDQogICAgICAgICAgdHlwZTogJ2VmZmVjdFNjYXR0ZXInLA0KICAgICAgICAgIGNvb3JkaW5hdGVTeXN0ZW06ICdnZW8nLA0KICAgICAgICAgIHN5bWJvbFNpemU6IGZ1bmN0aW9uICh2YWwpIHsNCiAgICAgICAgICAgIHJldHVybiA0DQogICAgICAgICAgICAvLyByZXR1cm4gdmFsWzJdIC8gNTA7DQogICAgICAgICAgfSwNCiAgICAgICAgICBsZWdlbmRIb3Zlckxpbms6IHRydWUsDQogICAgICAgICAgc2hvd0VmZmVjdE9uOiAncmVuZGVyJywNCiAgICAgICAgICByaXBwbGVFZmZlY3Q6IHsNCiAgICAgICAgICAgIC8vIHBlcmlvZDogNCwNCiAgICAgICAgICAgIHNjYWxlOiA2LA0KICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDI1NSwyNTUsMjU1LCAxKScsDQogICAgICAgICAgICBicnVzaFR5cGU6ICdmaWxsJw0KICAgICAgICAgIH0sDQogICAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgICAgc2hvdzogdHJ1ZSwNCiAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gKHBhcmFtcykgew0KICAgICAgICAgICAgICBpZiAocGFyYW1zLmRhdGEpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gcGFyYW1zLm5hbWUgKyAn77yaJyArIHBhcmFtcy5kYXRhWyd2YWx1ZSddWzJdDQogICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHBhcmFtcy5uYW1lDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDAsMCwwLC42KScsDQogICAgICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMTQ3LCAyMzUsIDI0OCwgLjgpJywNCiAgICAgICAgICAgIHRleHRTdHlsZTogew0KICAgICAgICAgICAgICBjb2xvcjogJyNGRkYnDQogICAgICAgICAgICB9DQogICAgICAgICAgfSwNCiAgICAgICAgICBsYWJlbDogew0KICAgICAgICAgICAgZm9ybWF0dGVyOiAocGFyYW0pID0+IHsNCiAgICAgICAgICAgICAgcmV0dXJuIHBhcmFtLm5hbWUuc2xpY2UoMCwgMikNCiAgICAgICAgICAgIH0sDQoNCiAgICAgICAgICAgIGZvbnRTaXplOiAxMSwNCiAgICAgICAgICAgIG9mZnNldDogWzAsIDJdLA0KICAgICAgICAgICAgcG9zaXRpb246ICdib3R0b20nLA0KICAgICAgICAgICAgdGV4dEJvcmRlckNvbG9yOiAnI2ZmZicsDQogICAgICAgICAgICB0ZXh0U2hhZG93Q29sb3I6ICcjMDAwJywNCiAgICAgICAgICAgIHRleHRTaGFkb3dCbHVyOiAxMCwNCiAgICAgICAgICAgIHRleHRCb3JkZXJXaWR0aDogMCwNCiAgICAgICAgICAgIGNvbG9yOiAnI0ZGRicsDQogICAgICAgICAgICBzaG93OiB0cnVlDQogICAgICAgICAgfSwNCiAgICAgICAgICAvLyBjb2xvckJ5OiAiZGF0YSIsDQogICAgICAgICAgaXRlbVN0eWxlOiB7DQogICAgICAgICAgICBjb2xvcjogJ3JnYmEoMjU1LDI1NSwyNTUsMSknLA0KICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDIyNTUsMjU1LDI1NSwyKScsDQogICAgICAgICAgICBib3JkZXJXaWR0aDogNCwNCiAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAnIzAwMCcsDQogICAgICAgICAgICBzaGFkb3dCbHVyOiAxMA0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBdDQogICAgICB9DQogICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb24NCiAgICB9LA0KICAgIG1lc3NhZ2UgKHRleHQpIHsNCiAgICAgIHRoaXMuJE1lc3NhZ2Uoew0KICAgICAgICB0ZXh0OiB0ZXh0LA0KICAgICAgICB0eXBlOiAnd2FybmluZycNCiAgICAgIH0pDQogICAgfSwNCiAgICBtYXBjbGljayAoKSB7DQogICAgICBpZiAodGhpcy5lY2hhcnRCaW5kQ2xpY2sgfHwgdGhpcy51c2VyQ29kZSAhPT0gLTEpIHJldHVybg0KICAgICAgLy8g5Y2V5Ye75YiH5o2i5Yiw57qn5Zyw5Zu+77yM5b2TbWFwQ29kZeacieWAvCzor7TmmI7lj6/ku6XliIfmjaLliLDkuIvnuqflnLDlm74NCiAgICAgIHRoaXMuJHJlZnMuQ2VudGVyTWFwLmNoYXJ0Lm9uKCdjbGljaycsIChwYXJhbXMpID0+IHsNCiAgICAgICAgLy8gY29uc29sZS5sb2cocGFyYW1zKTsNCiAgICAgICAgbGV0IHh6cURhdGEgPSB4enFDb2RlW3BhcmFtcy5uYW1lXQ0KICAgICAgICBpZiAoeHpxRGF0YSkgew0KICAgICAgICAgIHRoaXMuZ2V0RGF0YSh4enFEYXRhLmFkY29kZSkNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0aGlzLm1lc3NhZ2UoJ+aaguaXoOS4i+e6p+WcsOW4giEnKQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgICAgdGhpcy5lY2hhcnRCaW5kQ2xpY2sgPSB0cnVlDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["center-map.vue"],"names":[],"mappingsfile":"center-map.vue","sourceRoot":"src/views/indexs","sourcesContent":["<!--\r\n * @Author: daidai\r\n * @Date: 2022-03-01 11:17:39\r\n * @LastEditors: Please set LastEditors\r\n * @LastEditTime: 2022-05-07 10:59:56\r\n * @FilePath: \\web-pc\\src\\pages\\big-screen\\view\\indexs\\center-map.vue\r\n-->\r\n<template>\r\n  <div class=\"centermap\">\r\n    <div class=\"maptitle\">\r\n      <div class=\"zuo\"></div>\r\n      <span class=\"titletext\">{{ maptitle }}</span>\r\n      <div class=\"you\"></div>\r\n    </div>\r\n    <div class=\"mapwrap\">\r\n      <dv-border-box-13>\r\n        <div class=\"quanguo\" @click=\"getData(-1)\" v-if=\"code !== 'china' && userCode == -1\">\r\n          中国\r\n        </div>\r\n\r\n        <Echart id=\"CenterMap\" :options=\"options\" ref=\"CenterMap\" />\r\n      </dv-border-box-13>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport xzqCode from '../../utils/map/xzqCode'\r\nimport {\r\n  currentGET\r\n} from 'api/modules'\r\n\r\nimport {\r\n  GETNOBASE\r\n} from 'api'\r\nexport default {\r\n  data () {\r\n    return {\r\n      maptitle: '就业去向分布图',\r\n      options: {},\r\n      code: 'china',\r\n      userCode: -1, // -1 代表中国 用户权限的行政区code\r\n      echartBindClick: false,\r\n      dataList: []\r\n    }\r\n  },\r\n  created () {},\r\n\r\n  mounted () {\r\n    // console.log(xzqCode);\r\n    this.getData()\r\n  },\r\n  methods: {\r\n    getData (code) {\r\n      currentGET('big8', {\r\n        regionCode: code\r\n      }).then(res => {\r\n        if (res.success) {\r\n          if (!code) {\r\n            this.userCode = res.data.regionCode\r\n          }\r\n          this.$http.get('http://localhost/bigData/cityOrder').then(response => {\r\n            if (response.data.code === 200) {\r\n              this.dataList = response.data.data\r\n              for (let data of this.dataList) {\r\n                if (data.name === '新疆') {\r\n                  data.name = '新疆维吾尔族自治区'\r\n                } else if (data.name === '广西') {\r\n                  data.name = '广西壮族自治区'\r\n                } else if (data.name === '内蒙古') {\r\n                  data.name = '内蒙古自治区'\r\n                } else if (data.name === '广西') {\r\n                  data.name = '广西壮族自治区'\r\n                } else if (data.name === '西藏') {\n                  data.name = '西藏自治区'\n                } else if (data.name === '重庆') {\n                  data.name = '重庆市'\n                } else if (data.name === '宁夏') {\n                  data.name = '宁夏回族自治区'\n                } else {\r\n                  data.name += '省'\r\n                }\r\n              }\r\n              this.getGeojson(res.data.regionCode, this.dataList)\r\n            }\r\n          })\r\n          // this.getGeojson(res.data.regionCode, res.data.dataList)\r\n\r\n          // this.mapclick()\r\n        } else {\r\n          this.$Message.warning(res.msg)\r\n        }\r\n      })\r\n    },\r\n    getGeojson (name, mydata) {\r\n      if (name === -1) {\r\n        name = 'china'\r\n      }\r\n      this.code = name\r\n      GETNOBASE('./map-geojson/' + name + '.json').then((res) => {\r\n        // console.log('地图行政区划', name, res);\r\n        let cityCenter = {}\r\n        let arr = res.features\r\n        arr.map((item) => {\r\n          cityCenter[item.properties.name] =\r\n              item.properties.centroid || item.properties.center\r\n        })\r\n        let newData = []\r\n        // console.log('中心点',cityCenter);\r\n        mydata.map((item) => {\r\n          if (cityCenter[item.name]) {\r\n            let color = this.getColor(item.value)\r\n            newData.push({\r\n              name: item.name,\r\n              value: cityCenter[item.name].concat(item.value)\r\n              // itemStyle: {\r\n              //   color: color,\r\n              //   borderColor: color,\r\n              //   // borderWidth: 4,\r\n              // },\r\n            })\r\n          }\r\n        })\r\n        let mapjson = echarts.getMap(name)\r\n        if (!mapjson) {\r\n          echarts.registerMap(name, res)\r\n        }\r\n        this.init(name, mydata, newData)\r\n      })\r\n    },\r\n    getColor (num) {\r\n      if (num > 0 && num < 5) {\r\n        return '#035cf5'\r\n      } else if (num > 5 && num < 10) {\r\n        return '#3375e4'\r\n      } else if (num > 10 && num < 15) {\r\n        return '#6797ef'\r\n      } else if (num > 15 && num < 20) {\r\n        return '#96b5ef'\r\n      } else if (num > 20 && num < 25) {\r\n        return '#bacae8'\r\n      } else if (num > 25) {\r\n        return '#3FF4FF'\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    init (name, data, data2) {\r\n      let top = 45\r\n      let zoom = 1.05\r\n      if (name === 'china') {\r\n        top = 140\r\n        zoom = 1.42\r\n      }\r\n\r\n      let option = {\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        tooltip: {\r\n          show: false\r\n        },\r\n        legend: {\r\n          show: false\r\n        },\r\n        visualMap: {\r\n          left: 20,\r\n          bottom: 20,\r\n          pieces: [{\r\n            gte: 25,\r\n            label: '25个以上'\r\n          }, // 不指定 max，表示 max 为无限大（Infinity）。\r\n          {\r\n            gte: 20,\r\n            lte: 25,\r\n            label: '20-25个'\r\n          },\r\n          {\r\n            gte: 15,\r\n            lte: 20,\r\n            label: '15-20个'\r\n          },\r\n          {\r\n            gte: 10,\r\n            lte: 15,\r\n            label: '10-15个'\r\n          },\r\n          {\r\n            gte: 5,\r\n            lte: 10,\r\n            label: '5-10个'\r\n          },\r\n          {\r\n            lte: 5,\r\n            label: '1-5个'\r\n          } // 不指定 min，表示 min 为无限大（-Infinity）。\r\n          ],\r\n          inRange: {\r\n            // 渐变颜色，从小到大\r\n            color: [\r\n              '#c3d7df',\r\n              '#5cb3cc',\r\n              '#8abcd1',\r\n              '#66a9c9',\r\n              '#2f90b9',\r\n              '#1781b5'\r\n            ]\r\n          },\r\n          textStyle: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        geo: {\r\n          map: name,\r\n          roam: false,\r\n          selectedMode: false, // 是否允许选中多个区域\r\n          zoom: zoom,\r\n          top: top,\r\n          aspectScale: 0.78,\r\n          tooltip: {\r\n            show: false\r\n          },\r\n          label: {\r\n            show: false\r\n          }, // 地图中文字内容及样式控制\r\n          itemStyle: {\r\n            areaColor: 'rgba(0,0,0,0)',\r\n            borderColor: 'rgba(0,0,0,0)'\r\n          },\r\n          emphasis: {\r\n            disabled: true\r\n          }\r\n        },\r\n        series: [{\r\n          name: 'MAP',\r\n          type: 'map',\r\n          mapType: name,\r\n          aspectScale: 0.78,\r\n          data: data,\r\n          // data: [1,100],\r\n\r\n          selectedMode: false, // 是否允许选中多个区域\r\n          zoom: zoom,\r\n          geoIndex: 1,\r\n          top: top,\r\n          tooltip: {\r\n            show: true,\r\n            formatter: function (params) {\r\n              if (params.data) {\r\n                return params.name + '：' + params.data['value']\r\n              } else {\r\n                return params.name\r\n              }\r\n            },\r\n            backgroundColor: 'rgba(0,0,0,.6)',\r\n            borderColor: 'rgba(147, 235, 248, .8)',\r\n            textStyle: {\r\n              color: '#FFF'\r\n            }\r\n          },\r\n          label: {\r\n            show: false,\r\n            color: '#000',\r\n            // position: [-10, 0],\r\n            formatter: function (val) {\r\n              // console.log(val)\r\n              if (val.data !== undefined) {\r\n                return val.name.slice(0, 2)\r\n              } else {\r\n                return ''\r\n              }\r\n            },\r\n            rich: {},\r\n            emphasis: {\r\n              show: false\r\n            }\r\n          },\r\n          itemStyle: {\r\n            borderColor: 'rgba(147, 235, 248, .8)',\r\n            borderWidth: 1,\r\n            areaColor: {\r\n              type: 'radial',\r\n              x: 0.5,\r\n              y: 0.5,\r\n              r: 0.8,\r\n              colorStops: [{\r\n                offset: 0,\r\n                color: 'rgba(147, 235, 248, 0)' // 0% 处的颜色\r\n              },\r\n              {\r\n                offset: 1,\r\n                color: 'rgba(147, 235, 248, .2)' // 100% 处的颜色\r\n              }\r\n              ],\r\n              globalCoord: false // 缺为 false\r\n            },\r\n            shadowColor: 'rgba(128, 217, 248, .3)',\r\n            shadowOffsetX: -2,\r\n            shadowOffsetY: 2,\r\n            shadowBlur: 10,\r\n            emphasis: {\r\n              areaColor: '#389BB7',\r\n              borderWidth: 1\r\n            }\r\n          }\r\n        },\r\n        {\r\n          data: data2,\r\n          type: 'effectScatter',\r\n          coordinateSystem: 'geo',\r\n          symbolSize: function (val) {\r\n            return 4\r\n            // return val[2] / 50;\r\n          },\r\n          legendHoverLink: true,\r\n          showEffectOn: 'render',\r\n          rippleEffect: {\r\n            // period: 4,\r\n            scale: 6,\r\n            color: 'rgba(255,255,255, 1)',\r\n            brushType: 'fill'\r\n          },\r\n          tooltip: {\r\n            show: true,\r\n            formatter: function (params) {\r\n              if (params.data) {\r\n                return params.name + '：' + params.data['value'][2]\r\n              } else {\r\n                return params.name\r\n              }\r\n            },\r\n            backgroundColor: 'rgba(0,0,0,.6)',\r\n            borderColor: 'rgba(147, 235, 248, .8)',\r\n            textStyle: {\r\n              color: '#FFF'\r\n            }\r\n          },\r\n          label: {\r\n            formatter: (param) => {\r\n              return param.name.slice(0, 2)\r\n            },\r\n\r\n            fontSize: 11,\r\n            offset: [0, 2],\r\n            position: 'bottom',\r\n            textBorderColor: '#fff',\r\n            textShadowColor: '#000',\r\n            textShadowBlur: 10,\r\n            textBorderWidth: 0,\r\n            color: '#FFF',\r\n            show: true\r\n          },\r\n          // colorBy: \"data\",\r\n          itemStyle: {\r\n            color: 'rgba(255,255,255,1)',\r\n            borderColor: 'rgba(2255,255,255,2)',\r\n            borderWidth: 4,\r\n            shadowColor: '#000',\r\n            shadowBlur: 10\r\n          }\r\n        }\r\n        ]\r\n      }\r\n      this.options = option\r\n    },\r\n    message (text) {\r\n      this.$Message({\r\n        text: text,\r\n        type: 'warning'\r\n      })\r\n    },\r\n    mapclick () {\r\n      if (this.echartBindClick || this.userCode !== -1) return\r\n      // 单击切换到级地图，当mapCode有值,说明可以切换到下级地图\r\n      this.$refs.CenterMap.chart.on('click', (params) => {\r\n        // console.log(params);\r\n        let xzqData = xzqCode[params.name]\r\n        if (xzqData) {\r\n          this.getData(xzqData.adcode)\r\n        } else {\r\n          this.message('暂无下级地市!')\r\n        }\r\n      })\r\n      this.echartBindClick = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang='scss' scoped>\r\n  .centermap {\r\n    margin-bottom: 30px;\r\n\r\n    .maptitle {\r\n      height: 60px;\r\n      display: flex;\r\n      justify-content: center;\r\n      padding-top: 10px;\r\n      box-sizing: border-box;\r\n\r\n      .titletext {\r\n        font-size: 28px;\r\n        font-weight: 900;\r\n        letter-spacing: 6px;\r\n        background: linear-gradient(92deg,\r\n            #0072ff 0%,\r\n            #00eaff 48.8525390625%,\r\n            #01aaff 100%);\r\n        -webkit-background-clip: text;\r\n        -webkit-text-fill-color: transparent;\r\n        margin: 0 10px;\r\n      }\r\n\r\n      .zuo,\r\n      .you {\r\n        background-size: 100% 100%;\r\n        width: 29px;\r\n        height: 20px;\r\n        margin-top: 8px;\r\n      }\r\n\r\n      .zuo {\r\n        background: url(\"../../assets/img/xiezuo.png\") no-repeat;\r\n      }\r\n\r\n      .you {\r\n        background: url(\"../../assets/img/xieyou.png\") no-repeat;\r\n      }\r\n    }\r\n\r\n    .mapwrap {\r\n      height: 548px;\r\n      width: 100%;\r\n      // padding: 0 0 10px 0;\r\n      box-sizing: border-box;\r\n      position: relative;\r\n\r\n      .quanguo {\r\n        position: absolute;\r\n        right: 20px;\r\n        top: -46px;\r\n        width: 80px;\r\n        height: 28px;\r\n        border: 1px solid #00eded;\r\n        border-radius: 10px;\r\n        color: #00f7f6;\r\n        text-align: center;\r\n        line-height: 26px;\r\n        letter-spacing: 6px;\r\n        cursor: pointer;\r\n        box-shadow: 0 2px 4px rgba(0, 237, 237, 0.5),\r\n          0 0 6px rgba(0, 237, 237, 0.4);\r\n      }\r\n    }\r\n  }\r\n</style>\n"]}]}