{"remainingRequest":"/Users/dowei/Project/Tedu/job/IofTV-Screen/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!/Users/dowei/Project/Tedu/job/IofTV-Screen/src/views/indexs/center-map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dowei/Project/Tedu/job/IofTV-Screen/src/views/indexs/center-map.vue","mtime":1662718807924},{"path":"/Users/dowei/Project/Tedu/job/IofTV-Screen/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dowei/Project/Tedu/job/IofTV-Screen/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}